- name: Mongodb schema
  when: schema_type == "mongo"
  block:
    - name: setup mongodb repos
      ansible.builtin.copy:
        src: mongodb.repo
        dest: /etc/yum.repos.d/mongodb.repo
     

    - name: Install mongodb client
      ansible.builtin.yum: 
        name: mongodb-org-shell
        state: installed

    - name: Download mongodb PEM file
      ansible.builtin.get_url:
        url: https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem
        dest: /app/rds-combined-ca-bundle.pem

    - name: Load the schema
      #ansible.builtin.shell:  mongo --host mongodb-dev.devopsb71.tech </app/schema/{{component}}.js
      ansible.builtin.shell:  mongo --ssl --host {{ lookup('amazon.aws.aws_ssm', '{{env}}.docdb.endpoint', region='us-east-1') }}:27017 --sslCAFile /app/rds-combined-ca-bundle.pem --username {{ lookup('amazon.aws.aws_ssm', '{{env}}.docdb.user', region='us-east-1') }} --password {{ lookup('amazon.aws.aws_ssm', '{{env}}.docdb.pass', region='us-east-1') }} </app/schema/{{component}}.js

- name: Mysql schema
  when: schema_type == "mysql"
  block:
    - name: Install mysql client
      ansible.builtin.yum:
        name: mysql
        state: installed


    - name: Check schema
      ansible.builtin.shell: echo 'show databases' | mysql -h {{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.endpoint', region='us-east-1') }} -u{{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.user', region='us-east-1') }} -p{{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.pass', region='us-east-1') }} | grep cities
      register: schema_status
      ignore_errors: true

    - name: print
      debug:
        msg: "{{schema_status}}"
#  when we run above code and print will get rc:0 or 1 if it is 1 then load schema
    - name: Load the schema
      ansible.builtin.shell:  mysql -h {{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.endpoint', region='us-east-1') }} -u{{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.user', region='us-east-1') }} -p{{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.pass', region='us-east-1') }}</app/schema/{{component}}.sql
      when: schema_status.rc == 1

